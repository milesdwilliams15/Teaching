---
title: "Data Challenge 4"
format: pdf
editor: visual
---

The lecture notes on commitment problems as a reason for war ([link](https://milesdwilliams15.quarto.pub/studying-why-we-fight-with-r/07_commitment_problems.html)) present a data analysis that tests a simple hypothesis that follows if commitment problems are partially to blame for international conflicts. In this data challenge, I want you to extend this analysis.

The lecture notes test the proposition that future shifts in the balance of power increase the likelihood of militarized interstate dispute (MID) initiation. However, the question of which side initiated the dispute was overlooked. In the classic commitment problem, the identity of the actor that initiates a conflict matters. We should expect the side ***losing*** power to have an incentive to fight a preventive war. Therefore, it should not only be the case that a shift in power increases the likelihood of conflict, it should be the case that the side losing power has the greater likelihood of initiating the conflict.

To test this additional claim, construct a dataset similar to the one in the lecture notes, but this time make it a directed dyad dataset. Furthermore, construct a slightly different version of the power shift variable. The one in the notes just quantifies how large a power shift is in relative terms, but it doesn't specify which side is gaining or losing power. You can use the below modified version of the `power_shift()` function in the notes to create a directed version of the variable. It will return positive values when side 1 gains power and negative values when a side 1 loses power (note: you'll need to make sure that the options `x` and `xlead` are the CINC scores for side 1).

```{r}
## create function to measure change in the BoP
power_shift <- function(x, y, xlead, ylead) {
  val <- log((xlead / ylead) / (x / y))
  val # return
}
```

You also need to construct a measure of whether side 1 initiated a conflict. This will be your outcome variable in your analysis (hint: you can use the product of `gmlmidonset` and `init1` to measure the outcome of interest).

With this dataset, estimate a logit model similar to the one in the notes. To visualize the results you can either produce a coefficient plot or tou can then use `plot_model()` from `{sjPlot}`.

Once you've done the analysis, interpret the results. Do you find evidence consistent with what we expect with commitment problems?

```{r}
#| include: false
#| eval: false
#| fig-height: 4
#| fig-width: 6

## 1. Open R packages
## I need the {tidyverse} and {peacesciencer}
library(tidyverse)
library(peacesciencer)
library(coolorrr)
set_theme()
set_palette(
  binary = c("red3", "steelblue")
)

## 2. Data
## I need a directed dyad-year dataset populated
## with:
## - MID data
## - peace spells
## - CINC scores
## It should be filtered down to politically
## relevant dyads

create_dyadyears(
  subset_years = 1816:2010
) |>
  add_gml_mids() |>
  add_spells() |>
  add_nmc() |>
  filter_prd() -> Data

## 3. Measuring shifts in power

## create function to measure change in the BoP
power_shift <- function(x, y, xlead, ylead) {
  val <- log((xlead / ylead) / (x / y))
  val # return
}

## apply the function to the data
Data |>
  group_by(ccode1, ccode2) |>
  mutate(
    across(
      c(cinc1, cinc2),
      ~ lead(.x, order_by = year),
      .names = "{.col}_lead"
    )
  ) |>
  ungroup() |>
  mutate(
    cinc_change = power_shift(
      cinc1, cinc2, cinc1_lead, cinc2_lead
    )
  ) -> Data

Data |>
  mutate(
    dyad = paste0(ccode1, ccode2),
    init1_onset = init1 * gmlmidonset
  ) -> Data

## check distribution
ggplot(Data) +
  aes(x = cinc_change) +
  geom_density()

## 4. estimate model
library(mfx)
logitmfx(
   init1_onset ~ cinc_change +
    gmlmidspell + I(gmlmidspell^2) + 
    I(gmlmidspell^3),
  data = Data,
  robust = T,
  clustervar1 = "dyad"
) -> model_fit

## 5. show results
library(sjPlot)
plot_model(
  model_fit$fit,
  type = "pred",
  terms = "cinc_change",
  vcov.fun = vcovCL(model_fit$fit, cluster = Data$dyad)
) +
  labs(
    x = NULL,
    y = NULL,
    title = "Likelihood that side 1 initiates a MID",
    caption = "Estimates from a logit model that adjusts for a cubic peace spells trend."
  ) +
  annotate(
    "text",
    x = c(-2, 2),
    y = c(0.2, 0.2),
    label = c(
      expression(""%<-%"Side 1 loses power"),
      expression("Side 1 gains power"%->%"")
    ),
    parse = T
  ) +
  geom_vline(
    xintercept = 0,
    linetype = 2
  )
```
